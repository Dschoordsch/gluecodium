# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

class MethodOverloads {
    struct Point {
        x: Double
        y: Double
    }

    typealias StringArray = List<String>
    typealias IntArray = List<Byte>

    fun isBoolean(input: Boolean): Boolean
    fun isBoolean(input: Byte): Boolean
    fun isBoolean(input: String): Boolean
    fun isBoolean(input: Point): Boolean
    fun isBoolean(
        input1: Boolean,
        input2: Byte,
        input3: String,
        input4: Point
    ): Boolean
    @Java(Name = "isBooleanStringArrayOverload")
    fun isBoolean(input: StringArray): Boolean
    @Java(Name = "isBooleanIntArrayOverload")
    fun isBoolean(input: IntArray): Boolean
    @Cpp(Const)
    fun isBoolean(): Boolean
    fun isFloat(input: String): Boolean
    fun isFloat(input: IntArray): Boolean
}

class SpecialNames {
    fun create()
    fun release()
    fun createProxy()
    fun _upperCase()
}
