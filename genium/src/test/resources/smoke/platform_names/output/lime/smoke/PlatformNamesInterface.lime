package smoke

import smoke.PlatformNames.BasicStruct
@Cpp("fooInterface")
@Java("barInterface")
@Swift("bazInterface")
class PlatformNamesInterface {
    @Cpp("FooMethod")
    @Java("BarMethod")
    @Swift("BazMethod")
    fun basicMethod(
        @Cpp("FooParameter")
        @Java("BarParameter")
        @Swift("BazParameter", Label = "_")
        basicParameter: String
    ): BasicStruct

    @Cpp("make")
    @Java("make")
    @Swift("make")
    constructor create(
        @Cpp("makeParameter")
        @Java("makeParameter")
        @Swift("makeParameter", Label = "_")
        basicParameter: String
    )

    @Swift("BAZ_ATTRIBUTE")
    property basicAttribute: UInt {
        @Cpp("GET_FOO_ATTRIBUTE")
        @Java("GET_BAR_ATTRIBUTE")
        get
        @Cpp("SET_FOO_ATTRIBUTE")
        @Java("SET_BAR_ATTRIBUTE")
        set
    }
}
