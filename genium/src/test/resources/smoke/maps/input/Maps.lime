# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

class Maps {
    struct SomeStruct {
        value: String
    }
    struct StructWithMap {
        errorMapping: ErrorCodeToMessageMap
    }

    typealias ErrorCodeToMessageMap = Map<Int, String>
    typealias NumberToStruct = Map<UByte, SomeStruct>
    typealias NestedMap = Map<UByte, NumberToStruct>
    typealias NumberToTypeDef = Map<UByte, SomeId>
    typealias TypeDefToNumber = Map<SomeId, UByte>
    typealias SomeId = String
    typealias StringToArray = Map<String, ArrayOfInts>
    typealias ArrayOfInts = List<Int>
    typealias StringToArrayOfTypeDefs = Map<String, ArrayOfTypeDefs>
    typealias SomeInt = Int
    typealias ArrayOfTypeDefs = List<SomeInt>
    typealias NumberToInstance = Map<UByte, MapsInstance>

    static fun methodWithMap(input: ErrorCodeToMessageMap): ErrorCodeToMessageMap
    static fun methodWithMapToStruct(input: NumberToStruct): NumberToStruct
    static fun methodWithNestedMap(input: NestedMap): NestedMap
    static fun methodWithStructWithMap(input: StructWithMap): StructWithMap
    static fun methodWithMapOfArrays(input: StringToArray): StringToArray
    static fun methodWithMapOfInstances(input: NumberToInstance): NumberToInstance
}

interface MapsInstance {}
