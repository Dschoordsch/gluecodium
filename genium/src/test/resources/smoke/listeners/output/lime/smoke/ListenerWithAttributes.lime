package smoke

interface ListenerWithAttributes {
    typealias StringToDouble = Map<String, Double>

    enum ResultEnum {
        NONE,
        RESULT
    }

    struct ResultStruct {
        result: Double
    }

    property message: String
    property packedMessage: CalculationResult
    property structuredMessage: ResultStruct
    property enumeratedMessage: ResultEnum
    property arrayedMessage: List<String>
    property mappedMessage: StringToDouble
    property bufferedMessage: Blob
}
