package smoke
// This is some very useful interface.
@Deprecated("Unfortunately, this interface is deprecated. Use [comments] instead.")
interface DeprecationComments {
    // This is some very useful typedef.
    @Deprecated("Unfortunately, this typedef is deprecated. Use [comments.Usefulness] instead.")
    typealias Usefulness = Boolean
    // This is some very useful array.
    @Deprecated("Unfortunately, this array is deprecated. Use [comments.SomeArray] instead.")
    typealias SomeArray = List<String>
    // This is some very useful map.
    @Deprecated("Unfortunately, this map is deprecated. Use [comments.SomeMap] instead.")
    typealias SomeMap = Map<String, Usefulness>
    // This is some very useful enum.
    @Deprecated("Unfortunately, this enum is deprecated. Use [comments.SomeEnum] instead.")
    enum SomeEnum {
        // Not quite useful
        @Deprecated("Unfortunately, this item is deprecated.\nUse [comments.SomeEnum.Useless] instead.")
        Useless
    }
    @Deprecated("Unfortunately, this exception is deprecated, please use [comments.SomeEnumException] instead.")
    exception SomeEnumException(SomeEnum)
    // This is some very useful struct.
    @Deprecated("Unfortunately, this struct is deprecated. Use [comments.SomeStruct] instead.")
    struct SomeStruct {
        // How useful this struct is.
        @Deprecated("Unfortunately, this field is deprecated.\nUse [comments.SomeStruct.someField] instead.")
        someField: Usefulness
    }
    // This is some very useful constant.
    @Deprecated("Unfortunately, this constant is deprecated. Use [comments.VeryUseful] instead.")
    const VeryUseful: Usefulness = true
    // This is some very useful method that measures the usefulness of its input.
    // @param[input] Very useful input parameter
    // @return Usefulness of the input
    @Deprecated("Unfortunately, this method is deprecated.\nUse [comments.someMethodWithAllComments] instead.")
    fun someMethodWithAllComments(
        input: String
    ): Usefulness
    // Some very useful attribute.
    // @get Gets some very useful attribute.
    // @set Sets some very useful attribute.
    @Deprecated("Unfortunately, this attribute is deprecated.\nUse [comments.SomeAttribute] instead.")
    property SomeAttribute: Usefulness {
        @Deprecated("Unfortunately, this attribute's getter is deprecated.\nUse [comments.SomeAttribute.get] instead.")
        get
        @Deprecated("Unfortunately, this attribute's setter is deprecated.\nUse [comments.SomeAttribute.set] instead.")
        set
    }
}
