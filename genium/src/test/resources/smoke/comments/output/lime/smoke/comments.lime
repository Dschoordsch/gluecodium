package smoke
// This is some very useful interface.
class comments {
    // This is some very useful typedef.
    typealias Usefulness = Boolean
    // This is some very useful array.
    typealias SomeArray = List<String>
    // This is some very useful map.
    typealias SomeMap = Map<String, Usefulness>
    // This is some very useful enum.
    enum SomeEnum {
        // Not quite useful
        Useless,
        // Somewhat useful
        Useful
    }
    // This is some very useful exception.
    exception SomeEnumException(SomeEnum)
    // This is some very useful struct.
    // @constructor This is how easy it is to construct.
    struct SomeStruct {
        // How useful this struct is
        someField: Usefulness
        // Can be `null`
        nullableField: String?
    }
    // This is some very useful constant.
    const VeryUseful: Usefulness = true
    // This is some very useful method that measures the usefulness of its input.
    // @param[input] Very useful input parameter
    // @return Usefulness of the input
    // @throws Sometimes it happens.
    fun someMethodWithAllComments(
        input: String
    ): Usefulness throws SomeEnumException
    // This is some very useful method that measures the usefulness of its input.
    // @param[input] Very useful input parameter
    fun someMethodWithInputComments(
        input: String
    ): Usefulness
    // This is some very useful method that measures the usefulness of its input.
    // @return Usefulness of the input
    fun someMethodWithOutputComments(
        input: String
    ): Usefulness
    // This is some very useful method that measures the usefulness of its input.
    fun someMethodWithNoComments(
        input: String
    ): Usefulness
    // This is some very useful method that does not measure the usefulness of its input.
    // @param[input] Very useful input parameter
    fun someMethodWithoutReturnTypeWithAllComments(
        input: String
    )
    // This is some very useful method that does not measure the usefulness of its input.
    fun someMethodWithoutReturnTypeWithNoComments(
        input: String
    )
    // This is some very useful method that measures the usefulness of something.
    // @return Usefulness of the input
    fun someMethodWithoutInputParametersWithAllComments(): Usefulness
    // This is some very useful method that measures the usefulness of something.
    fun someMethodWithoutInputParametersWithNoComments(): Usefulness
    fun someMethodWithNothing()
    // This is some very useful method that does nothing.
    fun someMethodWithoutReturnTypeOrInputParameters()
    // This is some very useful instance method.
    // @param[input] This is some very useful instance method parameter.
    // @return This is some very useful instance method result.
    fun instanceMethod(
        input: CommentsInstantiable
    ): CommentsInstantiable
    // @param[documented] nicely documented
    fun oneParameterCommentOnly(
        undocumented: String,
        documented: String
    ): String
    // @return nicely documented
    fun returnCommentOnly(
        undocumented: String
    ): String
    // Some very useful attribute.
    // @get Gets some very useful attribute.
    // @set Sets some very useful attribute.
    property SomeAttribute: Usefulness {
        get
        set
    }
    // Some very useful attribute.
    // @get Gets some very useful attribute.
    // @set Sets some very useful attribute.
    property instanceAttribute: CommentsInstantiable {
        get
        set
    }
}
