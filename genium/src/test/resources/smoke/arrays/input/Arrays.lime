# Copyright (C) 2016-2019 HERE Europe B.V.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package smoke

class Arrays {
    struct BasicStruct {
        value: Double
    }
    @Cpp(ExternalType = "alien/FooStruct.h", ExternalName = "::alien::FooStruct")
    struct ExternalStruct {
        string: String
    }
    struct FancyStruct {
        messages: StringArray
        numbers: List<UByte>
        image: Blob
    }

    enum SomeEnum {
        FOO,
        BAR
    }
    @Cpp(ExternalType = "alien/FooEnum.h", ExternalName = "::alien::FooEnum")
    enum ExternalEnum {
        ON,
        OFF
    }

    typealias StructArray = List<BasicStruct>
    typealias ExternalStructArray = List<ExternalStruct>
    typealias UintArray = List<UByte>
    typealias NestedUintArray = List<UintArray>
    typealias StringArray = List<String>
    typealias FancyArray = List<FancyStruct>
    typealias ProfileIdList = List<ProfileId>
    typealias ProfileId = String
    typealias ArrayOfMaps = List<ErrorCodeToMessageMap>
    typealias ErrorCodeToMessageMap = Map<Int, String>
    typealias ArrayOfAliasedMaps = List<ErrorCodeToProfileIdMap>
    typealias ErrorCodeToProfileIdMap = Map<Int, ProfileId>
    typealias ArrayOfArrays = List<StringArray>
    typealias ArrayOfEnums = List<SomeEnum>
    typealias ArrayOfExternalEnums = List<ExternalEnum>

    static fun methodWithArray(input: StringArray): StringArray
    static fun methodWithArrayInline(input: List<UByte>): List<UByte>
    static fun methodWithStructArray(input: List<BasicStruct>): StructArray
    static fun methodWithExternalStructArray(input: List<ExternalStruct>): ExternalStructArray
    static fun methodWithArrayOfArrays(input: NestedUintArray): List<UintArray>
    static fun mergeArraysOfStructsWithArrays(
        inlineFancyArray: List<FancyStruct>,
        fancyArray: FancyArray
    ): FancyArray
    static fun methodWithArrayOfAliases(input: ProfileIdList): ProfileIdList
    static fun methodWithArrayOfMaps(input: ArrayOfMaps): ArrayOfMaps
    static fun methodWithByteBuffer(input: Blob): Blob
    static fun methodWithEnumArray(input: List<SomeEnum>): ArrayOfEnums
    static fun methodWithExternalEnumArray(input: List<ExternalEnum>): ArrayOfExternalEnums
}
