{{!!
  !
  ! Copyright (C) 2016-2019 HERE Europe B.V.
  !
  ! Licensed under the Apache License, Version 2.0 (the "License");
  ! you may not use this file except in compliance with the License.
  ! You may obtain a copy of the License at
  !
  !     http://www.apache.org/licenses/LICENSE-2.0
  !
  ! Unless required by applicable law or agreed to in writing, software
  ! distributed under the License is distributed on an "AS IS" BASIS,
  ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ! See the License for the specific language governing permissions and
  ! limitations under the License.
  !
  ! SPDX-License-Identifier: Apache-2.0
  ! License-Filename: LICENSE
  !
  !}}
{{>common/DocComment}}
{{#if visibility.toString}}{{visibility}} {{/if}}{{#qualifiers}}{{.}} {{/qualifiers}}class {{name}} {{#if this.extendedClass}}extends {{extendedClass.name}} {{/if}}{{#if parentInterfaces}}implements {{join parentInterfaces delimiter=", " }} {{/if}}{
{{#if isParcelable}}{{prefixPartial "java/ParcelableCreator" "    "}}

{{/if}}
{{#constants}}{{prefixPartial "java/Constant" "    "}}
{{/constants}}
{{#fields}}{{prefixPartial "java/Field" "    "}}
{{/fields}}
{{#enums}}{{prefixPartial "java/Enum" "    "}}
{{/enums}}
{{#exceptions}}{{#set static=true}}{{prefixPartial "java/ExceptionDefinition" "    "}}{{/set}}
{{/exceptions}}
{{#innerClasses}}{{prefixPartial "java/Class" "    "}}
{{/innerClasses}}
{{#set className=name}}{{#constructors}}
{{prefixPartial "java/MethodComment" "    "}}
    {{visibility}} {{className}}({{joinPartial parameters "java/Parameter" ", "}}){{#exception}} throws {{name}}{{/exception}} {
{{#if isImplClass}}
        this({{name}}({{join parameters delimiter=", " }}));
{{/if}}{{#unless isImplClass}}
        {{className}} _other = {{name}}({{join parameters delimiter=", " }});
{{#fields}}        this.{{name}} = _other.{{name}};
{{/fields}}
{{/unless}}
    }
{{/constructors}}{{/set}}
{{#if isImplClass}}
{{prefixPartial "java/NativeConstructor" "    "}}
{{/if}}
{{#if fields}}{{#unless constructors}}
    public {{name}}({{#uninitializedFields}}{{type}} {{name}}{{#if iter.hasNext}}, {{/if}}{{/uninitializedFields}}) {
{{#fields}}        this.{{name}} = {{#if initial.isCustom}}{{>java/FieldInitializer}}{{/if}}{{#unless initial.isCustom}}{{name}}{{/unless}};
{{/fields}}
    }{{#if hasDefaults}}

    public {{name}}({{#fields}}{{type}} {{name}}{{#if iter.hasNext}}, {{/if}}{{/fields}}) {
{{#fields}}        this.{{name}} = {{name}};
{{/fields}}
    }{{/if}}
{{/unless}}{{/if}}
{{#if isParcelable}}{{prefixPartial "java/ParcelableImpl" "    "}}

{{/if}}
{{#if isEquatable}}{{prefixPartial "java/EqualsAndHashCode" "    "}}
{{/if}}
{{#if needsBuilder}}{{#unless constructors}}{{prefixPartial "java/FieldsBuilder" "    "}}

{{/unless}}{{/if}}
{{#methods}}{{prefixPartial "java/MethodSignature" "    "}}
{{/methods}}
}
