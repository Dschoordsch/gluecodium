{{#unless isExternal}}{{#if fields}}
{{#className}}{{.}}::{{/className}}{{name}}::{{name}}( )
    : {{#parentStruct}}{{parent.name}}{ }, {{/parentStruct}}{{#fields}}{{name}}{ {{#initializer}}{{name}} {{/initializer}}}{{#if iter.hasNext}}, {{/if}}{{/fields}}
{
}

{{#className}}{{.}}::{{/className}}{{name}}::{{name}}( {{joinPartial fields "cpp/CppMethodParameter" ", "}} )
    : {{#fields}}{{name}}( {{name}} ){{#if iter.hasNext}}, {{/if}}{{/fields}}
{
}

{{/if}}{{!!
}}{{#if isEquatable}}
bool {{#className}}{{.}}::{{/className}}{{name}}::operator==( const {{name}}& rhs ) const
{
    return {{joinPartial fields "fieldEq" " &&
        " }};
}

bool {{#className}}{{.}}::{{/className}}{{name}}::operator!=( const {{name}}& rhs ) const
{
    return !( *this == rhs );
}

{{/if}}{{/unless}}{{!!
}}{{+fieldEq}}{{name}} == rhs.{{name}}{{/fieldEq}}