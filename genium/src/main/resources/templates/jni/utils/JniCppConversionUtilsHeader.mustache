{{>java/CopyrightHeader}}

#pragma once

#include <jni.h>

#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace {{.}}
{
namespace jni
{

// ------------------- JNI to C++ conversion functions ---------------------------------------------

/**
 * Converts a JNI jstring to a std string.
 */
std::string convert_from_jni( JNIEnv* env, const jobject jvalue, std::string* dummy );

/**
 * Converts a jbyteArray to a byte buffer
 */
std::shared_ptr< ::std::vector< uint8_t > > convert_from_jni(
    JNIEnv* env, const jbyteArray& jvalue, std::shared_ptr< ::std::vector< uint8_t > >* dummy );

// -------------------- C++ to JNI conversion functions --------------------------------------------

/**
 * Converts a std string to a JNI jstring
 */
jstring convert_to_jni( JNIEnv* env, const std::string& nvalue );

/**
 * Converts a byte buffer to a jbyteArray
 */
jbyteArray convert_to_jni( JNIEnv* env, const std::shared_ptr< ::std::vector< uint8_t > >& nvalue );

}
}
