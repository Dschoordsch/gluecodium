{
  {{#unless cppStruct.isImmutable}}{{cppStruct.fullyQualifiedName}} _nout{};{{/unless}}
  jclass javaClass = _jenv->GetObjectClass(_jinput);
{{#fields}}
  {{#hasCustomType}}

  {{cppField.type.name}} n_{{cppField.name}} = convert_from_jni(
    _jenv,
    {{internalNamespace}}::jni::get_object_field(
    _jenv,
    javaClass,
    _jinput,
    "{{javaField.name}}",
    "L{{join javaField.type.packageNames delimiter="/"}}/{{join javaField.type.classNames delimiter="$"}};"),
    ({{cppField.type.name}}*)nullptr );
  {{/hasCustomType}}
  {{^hasCustomType}}

  {{cppField.type.name}} n_{{cppField.name}} = {{internalNamespace}}::jni::get_{{javaField.type.literalName}}_field(_jenv, javaClass, _jinput, "{{javaField.name}}");
  {{/hasCustomType}}
  {{#unless cppStruct.isImmutable}}_nout.{{#if cppSetterName}}{{cppSetterName}}({{/if}}{{#unless cppSetterName}}{{cppField.name}} = {{/unless}}n_{{cppField.name}}{{#if cppSetterName}}){{/if}};{{/unless}}
{{/fields}}
  {{#if cppStruct.isImmutable}}return {{cppStruct.fullyQualifiedName}}({{#fields}}n_{{cppField.name}}{{#if iter.hasNext}}, {{/if}}{{/fields}});{{/if}}
  {{#unless cppStruct.isImmutable}}return _nout;{{/unless}}
}
