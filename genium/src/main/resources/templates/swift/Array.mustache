//
{{#if copyrightHeader}}{{prefix copyrightHeader "// "}}{{/if}}
//
// Automatically generated. Do not modify. Your changes will be lost.
import Foundation

{{#arrays}}
internal func copyFromCType(_ handle: _baseRef) -> {{name}} {
    var result: {{name}} = []
    let count = {{refName}}_count(handle)
    for idx in 0..<count {
        result.append({{underlyingType.className}}copyFromCType({{refName}}_get(handle, idx)))
    }
    return result
}

internal func moveFromCType(_ handle: _baseRef) -> {{name}} {
    defer {
        {{refName}}_release_handle(handle)
    }
    var result: {{name}} = []
    let count = {{refName}}_count(handle)
    for idx in 0..<count {
        result.append({{underlyingType.className}}copyFromCType({{refName}}_get(handle, idx)))
    }
    return result
}

internal func copyToCType(_ swiftArray: {{name}}) -> RefHolder {
    let handle = {{refName}}_create_handle()
    for item in swiftArray {
        {{refName}}_append(handle, moveToCType(item).ref)
    }
    return RefHolder(handle)
}

internal func moveToCType(_ swiftArray: {{name}}) -> RefHolder {
    return RefHolder(ref: copyToCType(swiftArray).ref, release: {{refName}}_release_handle)
}

{{/arrays}}
