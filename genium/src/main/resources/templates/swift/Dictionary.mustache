{{#dictionaries}}

func copyFromCType(_ handle: _baseRef) -> {{implementingClass}} {
    var swiftDict: {{implementingClass}} = [:]
    let iterator_handle = {{cPrefix}}_iterator(handle)
    while {{cPrefix}}_iterator_is_valid(handle, iterator_handle) {
{{#set variableName="key" variableType=keyType}}{{prefixPartial "ConvertToSwift" "        "}}{{/set}}
{{#set variableName="value" variableType=valueType}}{{prefixPartial "ConvertToSwift" "        "}}{{/set}}
        swiftDict[swift_key] = swift_value
        {{cPrefix}}_iterator_increment(iterator_handle)
    }
    {{cPrefix}}_iterator_release_handle(iterator_handle)
    return swiftDict
}

func moveFromCType(_ handle: _baseRef) -> {{implementingClass}} {
    defer {
        {{cPrefix}}_release_handle(handle)
    }
    return copyFromCType(handle)
}

{{+ConvertToSwift}}{{!!
}}let c_{{variableName}} = {{cPrefix}}_iterator_{{variableName}}(iterator_handle)
let swift_{{variableName}}: {{variableType.publicName}} = {{variableType.className}}moveFromCType(c_{{variableName}}){{!!
}}{{/ConvertToSwift}}
{{/dictionaries}}
