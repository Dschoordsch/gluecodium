# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

import another.TypeCollectionWithEnums.ExplosiveErrorsException
import another.TypeCollectionWithEnums.SomeEnum
import another.TypeCollectionWithEnums.YetAnotherErrorsException

class Errors {
    @Immutable
    struct NonDefaultConstructor {
        id: Long
    }
    enum InternalErrors {
        NONE,
        CRASHED
    }
    @Cpp(
        ExternalType = "include/ExternalTypes.h",
        ExternalName = "::external::even_more_external::AlienErrors"
    )
    enum ExternalErrors {
        NONE,
        BOOM
    }
    // Example static method with an error enum that raises "CRASHED" error if errorFlag is true
    static fun methodWithError(
        errorFlag: Boolean
    ) throws InternalErrorsException
    // Example static method with an error enum which returns a String "SUCCEEDED" or raises "FAILED" error if
    // errorFlag is true
    static fun methodWithErrorAndString(
        errorFlag: Boolean
    ): /* Output string */ String throws another.AdditionalErrors.ExternalErrorsException
    // Example static method with an error enum which returns an array with bytes [x00, x01, x02]
    // or raises "EXPLODED" error if errorFlag is true
    static fun methodThatExplodes(
        errorFlag: Boolean
    ): /* Output buffer */ Blob throws ExplosiveErrorsException
    // Example static method with an error enum which returns enum ANOTHER_RESULT
    // or raises "BAD" error if errorFlag is true
    static fun methodWithGoodAndBad(
        errorFlag: Boolean
    ): SomeEnum throws YetAnotherErrorsException
    // Example static method with an external error enum that raises "BOOM" error if errorFlag is true
    static fun methodWithExternalError(
        errorFlag: Boolean
    ) throws ExternalErrorsException
    static fun getErrorCategoryMessage(
        value: InternalErrors
    ): String
    // Check whether Return works with structs without default constructor
    static fun methodWithErrorAndNonDefaultStruct(
        errorFlag: Boolean
    ): NonDefaultConstructor throws InternalErrorsException
    exception InternalErrorsException(InternalErrors)
    exception ExternalErrorsException(ExternalErrors)
}

class OtherErrors {
    enum InternalErrors {
        NONE,
        CRASHED
    }
    // Example static method with an error enum that raises "CRASHED" error if errorFlag is true
    static fun methodWithError(
        errorFlag: Boolean
    ) throws InternalErrorsException
    exception InternalErrorsException(InternalErrors)
}
