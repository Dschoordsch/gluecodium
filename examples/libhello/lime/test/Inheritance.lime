# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

interface ParentInterface {
    // Example method that returns a name. Should be overridden in child implementations.
    fun getName(): String
    // Returns the current instance that is cast to ParentInterface type.
    fun castToParent(): ParentInterface
    // Example attribute that represents a number.
    property luckyNumber: Int {
        // Example attribute that represents a number.
        get
        // Example attribute that represents a number.
        set
    }
}

class ChildClass : ParentInterface {
    // Creates an instance of ChildClass.
    static fun createChildClass(): ChildClass
    // Does nothing, just checks that it compiles.
    fun doSomethingToChildClass(
        input: ChildClass
    )
}

class GrandchildClass : ChildClass {
    // Creates an instance of GrandchildClass.
    static fun createGrandchildClass(): GrandchildClass
    fun doSomething(
        value: String
    )
}

interface RootInterface {
    fun rootMethod(
        data: String
    )
}

interface ChildInterface : RootInterface {
    fun getData(): String
}

interface AnotherChildInterface : RootInterface {
    fun getData(): String
}

class ConcreteChild : ChildInterface {}
class AnotherConcreteChild : AnotherChildInterface {}

class ConcreteGrandChild : ConcreteChild {}
class AnotherConcreteGrandChild : AnotherConcreteChild {}

class InheritanceTestHelper {
    static fun callRootMethod(
        object: RootInterface,
        data: String
    )
    static fun createChild(): ChildInterface
    static fun createAnotherChild(): AnotherChildInterface
    static fun createConcreteChild(): ConcreteChild
    static fun createAnotherConcreteChild(): AnotherConcreteChild
    static fun createConcreteGrandChild(): ConcreteGrandChild
    static fun createAnotherConcreteGrandChild(): AnotherConcreteGrandChild
}
