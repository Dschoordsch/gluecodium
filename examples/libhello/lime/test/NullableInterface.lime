# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package test

class NullableInterface {
    @Equatable
    struct SomeStruct {
        stringField: String = ""
    }
    struct NullableStruct {
        stringField: String? = null
        boolField: Boolean? = null
        doubleField: Double? = null
        structField: SomeStruct? = null
        enumField: SomeEnum? = null
        arrayField: SomeArray? = null
        inlineArrayField: List<String>? = null
        mapField: SomeMap? = null
        blobField: Blob? = null
    }
    struct NullableIntsStruct {
        int8Field: Byte? = null
        int16Field: Short? = null
        int32Field: Int? = null
        int64Field: Long? = null
        uint8Field: UByte? = null
        uint16Field: UShort? = null
        uint32Field: UInt? = null
        uint64Field: ULong? = null
    }
    enum SomeEnum {
        OFF,
        ON
    }
    typealias SomeArray = List<String>
    typealias SomeMap = Map<Long, String>
    constructor create()
    fun methodWithNullableStruct(
        input: NullableStruct
    ): NullableStruct
    fun methodWithNullableIntsStruct(
        input: NullableIntsStruct
    ): NullableIntsStruct
    fun methodWithString(
        input: String?
    ): String?
    fun methodWithBoolean(
        input: Boolean?
    ): Boolean?
    fun methodWithDouble(
        input: Double?
    ): Double?
    fun methodWithInt(
        input: Long?
    ): Long?
    fun methodWithSomeStruct(
        input: SomeStruct?
    ): SomeStruct?
    fun methodWithSomeEnum(
        input: SomeEnum?
    ): SomeEnum?
    fun methodWithSomeArray(
        input: SomeArray?
    ): SomeArray?
    fun methodWithInlineArray(
        input: List<String>?
    ): List<String>?
    fun methodWithSomeMap(
        input: SomeMap?
    ): SomeMap?
    static fun nullableListenerMethodRoundTrip(
        listener: NullableListener,
    
        input: Double?
    ): Double?
    static fun nullableListenerAttributeRoundTrip(
        listener: NullableListener,
    
        input: List<String>?
    ): List<String>?
    property stringAttribute: String? {
        get
        set
    }
    property boolAttribute: Boolean? {
        get
        set
    }
    property doubleAttribute: Double? {
        get
        set
    }
    property intAttribute: Long? {
        get
        set
    }
    property structAttribute: SomeStruct? {
        get
        set
    }
    property enumAttribute: SomeEnum? {
        get
        set
    }
    property arrayAttribute: SomeArray? {
        get
        set
    }
    property inlineArrayAttribute: List<String>? {
        get
        set
    }
    property mapAttribute: SomeMap? {
        get
        set
    }
}

interface NullableListener {
    fun methodWithDouble(
        input: Double?
    ): Double?
    property arrayAttribute: List<String>? {
        get
        set
    }
}
