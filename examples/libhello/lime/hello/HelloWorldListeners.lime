# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package hello

class Calculator {
    // a 3D position defined by its x, y and z
    struct Position {
        x: Float = 0.0
        y: Float = 0.0
        z: Float = 0.0
    }
    // register listener to calculateInBackground results notifications
    fun registerListener(
        listener: CalculatorListener
    )
    // unregister listener to calculateInBackground results notifications
    fun unregisterListener(
        listener: CalculatorListener
    )
    // removes all listeners to calculateInBackground results notifications
    fun removeAllListeners()
    // Compute the Euclidian distance between two positions.
    // It is guaranteed that listener will be called before method returns
    fun calculate(
        fromPosition: Position,
    
        toPosition: Position,
    
        listener: CalculatorListener
    )
    // start computing the Euclidian distance between two positions and notify the registered
    // listeners when it is done
    fun calculateInBackground(
        fromPosition: Position,
    
        toPosition: Position
    )
}

class CalculatorFactory {
    static fun createCalculator(): Calculator
}
