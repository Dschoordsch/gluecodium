# Copyright (C) 2016-2019 HERE Europe B.V.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# SPDX-License-Identifier: Apache-2.0
# License-Filename: LICENSE

package hello

class HelloWorldBuiltinTypes {
    // Example static method for HelloWorld which takes a signed byte and returns a signed byte
    static fun methodWithInt8(
        // Input number
        inputNumber: Byte
    ): /* Output number */ Byte
    // Example static method for HelloWorld which takes an unsigned byte and returns an unsigned byte
    static fun methodWithUint8(
        // Input number
        inputNumber: UByte
    ): /* Output number */ UByte
    // Example static method for HelloWorld which takes a signed 16 bits integer and returns a signed
    // 16 bits integer
    static fun methodWithInt16(
        // Input number
        inputNumber: Short
    ): /* Output number */ Short
    // Example static method for HelloWorld which takes an unsigned 16 bits integer and returns an
    // unsigned 16 bits integer
    static fun methodWithUint16(
        // Input number
        inputNumber: UShort
    ): /* Output number */ UShort
    // Example static method for HelloWorld which takes a signed 32 bits integer and returns a signed
    // 32 bits integer
    static fun methodWithInt32(
        // Input number
        inputNumber: Int
    ): /* Output number */ Int
    // Example static method for HelloWorld which takes an unsigned 32 bits integer and returns an
    // unsigned 32 bits integer
    static fun methodWithUint32(
        // Input number
        inputNumber: UInt
    ): /* Output number */ UInt
    // Example static method for HelloWorld which takes a signed 64 bits integer and returns a signed
    // 64 bits integer
    static fun methodWithInt64(
        // Input number
        inputNumber: Long
    ): /* Output number */ Long
    // Example static method for HelloWorld which takes an unsigned 64 bits integer and returns an
    // unsigned 64 bits integer
    static fun methodWithUint64(
        // Input number
        inputNumber: ULong
    ): /* Output number */ ULong
    // Example static method for HelloWorld which takes a boolean and returns a boolean
    static fun methodWithBoolean(
        // Input condition
        inputCondition: Boolean
    ): /* Output condition */ Boolean
    // Example static method for HelloWorld which takes a float and returns a float
    static fun methodWithFloat(
        // Input number
        inputNumber: Float
    ): /* Output number */ Float
    // Example static method for HelloWorld which takes a double and returns a double
    static fun methodWithDouble(
        // Input number
        inputNumber: Double
    ): /* Output number */ Double
    // Example static method for HelloWorld which takes a byte buffer and returns a byte buffer
    static fun methodWithByteBuffer(
        // Input buffer
        inputBuffer: Blob
    ): /* Output buffer */ Blob
    // Example static method for HelloWorld which takes a float and an 8 bits integer
    static fun methodWithFloatAndInteger(
        // input number
        inputFloat: Float,
    
        // input number
        inputInteger: Byte
    ): /* Output */ Double
    // Example static test method without out params and therefore with void return type
    static fun voidMethod(
        // Input number which can later be queried with getVoidMethodParameter()
        inputNumber: Int
    )
    // Example static method that returns the last number passed to voidMethod
    static fun getVoidMethodParameter(): /* the last number passed to voidMethod */ Int
}
